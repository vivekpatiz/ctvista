{"version":3,"sources":["ng://dhr-data-table/lib/dhr-data-table.service.ts","ng://dhr-data-table/lib/dhr-data-table.component.html","ng://dhr-data-table/lib/dhr-data-table.component.ts","ng://dhr-data-table/lib/dhr-data-table.module.ts"],"names":["DhrDataTableService","factory","ɵfac","providedIn","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelement","i0.ɵɵelementEnd","i0.ɵɵlistener","filterGlobal","$event","target","value","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵproperty","i0.ɵɵtemplate","i0.ɵɵpropertyInterpolate","i0.ɵɵtextInterpolate1","DhrDataTableComponent","confirmDialog","this","deleteEvent","EventEmitter","duplicateEvent","viewEvent","downloadEvent","shareEvent","prototype","ngOnInit","deleteRow","data","_this","rs","document","getElementById","remove","confirm","message","contentText","name","header","acceptLabel","rejectLabel","acceptIcon","rejectIcon","accept","emit","reject","duplicateRow","viewRow","downloadRow","shareRow","showWrappedMenu","r","s","undefined","querySelector","printFilteredUsers","e","event","CustomEvent","detail","load","window","dispatchEvent","customSort","console","log","sort","data1","data2","value1","field","value2","result","includes","v1","Date","v2","localeCompare","order","core","ɵɵdirectiveInject","api","ConfirmationService","selectors","inputs","cols","tableData","paginator","searchPlaceHolder","row","showCurrentPageReport","rowsPerPageOptions","scrollable","scrollHeight","styleClass","sortField","sortOrder","globalFilterFields","headertext","subHeadertext","actionbtn","showDeleteAtnBtn","showDuplicateAtnBtn","showViewAtnBtn","showDownloadAtnBtn","showShareAtnBtn","outputs","decls","vars","consts","template","rf","ctx","DhrDataTableModule","providers","imports","CommonModule","TableModule","ButtonModule","HttpClientModule","SplitButtonModule","FormsModule","ConfirmDialogModule","PaginatorModule","InputTextModule","ProgressSpinnerModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DhrDataTableService {\r\n\r\n  constructor() { }\r\n}\r\n","<p-table #dt [columns]=\"cols\" (sortFunction)=\"customSort($event)\" [customSort]=\"true\" [value]=\"tableData\" (onFilter)=\"printFilteredUsers($event)\" [paginator]=\"paginator\" [rows]=\"row\" [showCurrentPageReport]=\"showCurrentPageReport\"\r\n    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [rowsPerPageOptions]=\"rowsPerPageOptions\"\r\n    [scrollable]=\"scrollable\" [scrollHeight]=\"scrollHeight\" [styleClass]=\"styleClass\" [sortField]=\"sortField\" [sortOrder]=\"sortOrder\" \r\n    [globalFilterFields]=\"globalFilterFields\">\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n            <h4 class=\"p-m-0\">{{headertext}}<br><h5 style=\"margin: 3px;\">{{subHeadertext}}</h5></h4> \r\n            <span class=\"p-input-icon-left\">\r\n                <i class=\"pi pi-search\"></i>\r\n                <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" [placeholder]=\"searchPlaceHolder\" />\r\n            </span>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\" let-columns>\r\n        <tr style=\"font-size: 13px;\">\r\n            <th *ngFor=\"let col of columns\" pSortableColumn=\"{{col.sortOpt ? col.field : null}}\">\r\n                {{col.header}} <p-sortIcon *ngIf=\"col.sortOpt\" [field]=\"col.field\"></p-sortIcon>\r\n            </th>\r\n            <th style=\"width:5rem\" *ngIf=\"actionbtn\"></th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\" let-columns=\"columns\">\r\n        \r\n        <tr style=\"font-size: 12px;\">\r\n            <td *ngFor=\"let col of columns\" >\r\n                    {{col.type != 'date' ? rowData[col.field] : rowData[col.field] * 1000|  date:'short'}}\r\n            </td>\r\n            <td style=\"width:5rem\" *ngIf=\"actionbtn\">\r\n              <button style=\"position: relative;\" pButton pRipple icon=\"pi pi-ellipsis-v\" class=\"p-button-rounded p-button-success p-mr-2\" (click)=\"showWrappedMenu(rowData,ri)\"></button>\r\n              <div class=\"menuc\" style=\"position: absolute\">\r\n                <div id=\"myDropdown\" class=\"dropdown-content\" *ngIf=\"ri == rs\">\r\n                  <a *ngIf=\"showViewAtnBtn\" onMouseOver=\"this.style.color='#32cafc'\"\r\n                  onMouseOut=\"this.style.color='black'\" (click)=\"viewRow(rowData)\"><i class=\"fa fa-eye\" aria-hidden=\"true\"></i>&nbsp;&nbsp;View</a>\r\n                  <a *ngIf=\"showDuplicateAtnBtn\" onMouseOver=\"this.style.color='#32cafc'\"\r\n                  onMouseOut=\"this.style.color='black'\" (click)=\"duplicateRow(rowData)\"><i class=\"fa fa-files-o\" aria-hidden=\"true\"></i>&nbsp;&nbsp;Duplicate</a>\r\n                  <a *ngIf=\"showDeleteAtnBtn\" onMouseOver=\"this.style.color='red'\"\r\n                  onMouseOut=\"this.style.color='black'\" (click)=\"deleteRow(rowData)\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>&nbsp;&nbsp;Delete</a>\r\n                  <a *ngIf=\"showDownloadAtnBtn\" onMouseOver=\"this.style.color='#fcba03'\"\r\n                  onMouseOut=\"this.style.color='black'\" (click)=\"downloadRow(rowData)\"><i class=\"fa fa-download\" aria-hidden=\"true\"></i>&nbsp;&nbsp;Download</a>\r\n                  <a *ngIf=\"showShareAtnBtn\" onMouseOver=\"this.style.color='#fcba03'\"\r\n                  onMouseOut=\"this.style.color='black'\" (click)=\"shareRow(rowData)\"><i class=\"fa fa-share-alt\" aria-hidden=\"true\"></i>&nbsp;&nbsp;Share</a>\r\n                </div>\r\n              </div>  \r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n<p-confirmDialog [position]=\"'top'\" [baseZIndex]=\"10000000\" defaultFocus=\"none\"></p-confirmDialog>\r\n\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ConfirmationService, SortEvent } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'dhr-data-table',\r\n  templateUrl: './dhr-data-table.component.html',\r\n  styleUrls: ['./dhr-data-table.component.css']\r\n})\r\nexport class DhrDataTableComponent implements OnInit {\r\n\r\n  @Input() cols: string[];\r\n  @Input() tableData: any[];\r\n  @Input() paginator: boolean;\r\n  @Input() searchPlaceHolder: string;\r\n  @Input() row: number;\r\n  @Input() showCurrentPageReport: boolean;\r\n  @Input() rowsPerPageOptions: any[];\r\n  @Input() scrollable: boolean;\r\n  @Input() scrollHeight: string;\r\n  @Input() styleClass: string;\r\n  @Input() sortField: string;\r\n  @Input() sortOrder: number;\r\n  @Input() globalFilterFields: any[];\r\n  @Input() headertext: string;\r\n  @Input() subHeadertext: string;\r\n  @Input() contentText: string;\r\n  @Input() actionbtn: boolean;\r\n\r\n  @Input() showDeleteAtnBtn: boolean;\r\n  @Input() showDuplicateAtnBtn: boolean;\r\n  @Input() showViewAtnBtn: boolean;\r\n  @Input() showDownloadAtnBtn: boolean;\r\n  @Input() showShareAtnBtn: boolean;\r\n\r\n  @Output() deleteEvent = new EventEmitter();\r\n  @Output() duplicateEvent = new EventEmitter();\r\n  @Output() viewEvent = new EventEmitter();\r\n  @Output() downloadEvent = new EventEmitter();\r\n  @Output() shareEvent = new EventEmitter();\r\n  rs: any;\r\n\r\n  constructor(public confirmDialog: ConfirmationService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  deleteRow(data) {\r\n    this.rs = null;\r\n    if (document.getElementById('myDropdown')) {\r\n      document.getElementById('myDropdown').remove();\r\n    }\r\n    this.confirmDialog.confirm({\r\n      message: `This will delete ${this.contentText} '<span class=\"confrm-name\">${data.name}</span>' from your records. You can't undo this.`,\r\n      header: `Delete the ${this.contentText}`,\r\n      acceptLabel: 'Delete',\r\n      rejectLabel: 'Cancel',\r\n      acceptIcon: null,\r\n      rejectIcon: null,\r\n      accept: () => {\r\n        this.deleteEvent.emit(data);\r\n      },\r\n      reject: () => {\r\n      }\r\n    });\r\n  }\r\n\r\n  duplicateRow(data) {\r\n    this.rs = null;\r\n    if (document.getElementById('myDropdown')) {\r\n      document.getElementById('myDropdown').remove();\r\n    }\r\n    this.confirmDialog.confirm({\r\n      message: `This will create a copy of condenser '<span class=\"confrm-name\">${data.name}</span>'. You will be able to edit it later.`,\r\n      header: 'Duplicate the Condenser',\r\n      acceptLabel: 'Duplicate',\r\n      rejectLabel: 'Cancel',\r\n      acceptIcon: null,\r\n      rejectIcon: null,\r\n      accept: () => {\r\n        this.duplicateEvent.emit(data);\r\n      },\r\n      reject: () => {\r\n      }\r\n    });\r\n  }\r\n\r\n  viewRow(data) {\r\n    this.viewEvent.emit(data);\r\n    this.rs = null;\r\n    if (document.getElementById('myDropdown')) {\r\n      document.getElementById('myDropdown').remove();\r\n    }\r\n  }\r\n\r\n  downloadRow(data) {\r\n    this.downloadEvent.emit(data);\r\n    this.rs = null;\r\n    if (document.getElementById('myDropdown')) {\r\n      document.getElementById('myDropdown').remove();\r\n    }\r\n  }\r\n\r\n  shareRow(data) {\r\n    this.shareEvent.emit(data);\r\n    this.rs = null;\r\n    if (document.getElementById('myDropdown')) {\r\n      document.getElementById('myDropdown').remove();\r\n    }\r\n  }\r\n\r\n  showWrappedMenu(r, s) {\r\n    if (document.querySelector('.dropdown-content') == undefined || null) {\r\n      this.rs = s;\r\n    }\r\n    else {\r\n      this.rs = null;\r\n      document.getElementById('myDropdown').remove();\r\n    }\r\n  }\r\n  printFilteredUsers(e) {\r\n    const data = { load: e };\r\n    const event = new CustomEvent('dhr_table_filter_data', { detail: data });\r\n    window.dispatchEvent(event);\r\n  }\r\n\r\n  // custom sorting for different field\r\n  customSort(event: SortEvent) {\r\n    console.log(event)\r\n    event.data.sort((data1, data2) => {\r\n      let value1 = data1[event.field];\r\n      let value2 = data2[event.field];\r\n      let result = null;\r\n      console.log(value1, value2)\r\n      if (value1 == null && value2 != null)\r\n        result = -1;\r\n      else if (value1 != null && value2 == null)\r\n        result = 1;\r\n      else if (value1 == null && value2 == null)\r\n        result = 0;\r\n      else if (event.field.includes('updatedAt')) {\r\n        let v1 = new Date(value1);\r\n        let v2 = new Date(value2);\r\n        result = (v1 < v2) ? -1 : (v1 > v2) ? 1 : 0;\r\n      }\r\n      else if (typeof value1 === 'string' && typeof value2 === 'string')\r\n        result = value1.localeCompare(value2);\r\n      else\r\n        result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\r\n\r\n      return (event.order * result);\r\n    });\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { DhrDataTableComponent } from './dhr-data-table.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TableModule } from 'primeng/table';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SplitButtonModule } from 'primeng/splitbutton';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { PaginatorModule } from 'primeng/paginator';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [DhrDataTableComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TableModule,\r\n    ButtonModule,\r\n    HttpClientModule,\r\n    SplitButtonModule,\r\n    FormsModule,\r\n    ConfirmDialogModule,\r\n    PaginatorModule,\r\n    InputTextModule,\r\n    ProgressSpinnerModule\r\n  ],\r\n  providers:[ConfirmationService],\r\n  exports: [DhrDataTableComponent]\r\n})\r\nexport class DhrDataTableModule { }\r\n"]}